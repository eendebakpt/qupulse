[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qupulse"
dynamic = ["version"]
description = "A Quantum compUting PULse parametrization and SEquencing framework"
readme = "README.md"
license = "GPL-3.0-or-later"
requires-python = ">=3.8"
authors = [
    { name = "Quantum Technology Group and Chair of Software Engineering" },
    { name = "RWTH Aachen University" },
]
keywords = [
    "control",
    "physics",
    "pulse",
    "quantum",
    "qubit",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "frozendict",
    "lazy_loader",
    "numpy",
    "sympy>=1.1.1",
    "gmpy2",
]

[project.optional-dependencies]
autologging = [
    "autologging",
]
default = [
    "pandas",
    "qupulse[tests,docs,plotting,autologging,faster-sampling]",
]
docs = [
    "ipykernel",
    "nbsphinx",
    "pyvisa",
    "sphinx>=4",
]
faster-sampling = [
    "numba",
]
plotting = [
    "matplotlib",
]
tabor-instruments = [
    "tabor_control>=0.1.1",
]
tektronix = [
    "tek_awg>=0.2.1",
]
tests = [
    "pytest",
    "pytest_benchmark",
]
zurich-instruments = [
    "qupulse-hdawg-legacy;python_version<'3.9'",
    "qupulse-hdawg;python_version>='3.9'",
]

[project.urls]
Homepage = "https://github.com/qutech/qupulse"

[tool.hatch.version]
path = "qupulse/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/qupulse",
]

[tool.towncrier]
directory = "changes.d"
package = "qupulse"
package_dir = "./qupulse"
filename = "RELEASE_NOTES.rst"
name = "qupulse"
issue_format = "`#{issue} <https://github.com/qutech/qupulse/issues/{issue}>`_"

[tool.pytest.ini_options]
minversion = "6.0"
python_files = [
    "*_tests.py",
    "*_bug.py"
]
filterwarnings = [
    # syntax is action:message_regex:category:module_regex:lineno
    # we fail on all with a whitelist because a dependency might mess-up passing the correct stacklevel
    "error::SyntaxWarning",
    "error::DeprecationWarning",
    # pytest uses readline which uses collections.abc
    # "ignore:Using or importing the ABCs from 'collections' instead of from 'collections\.abc\' is deprecated:DeprecationWarning:.*readline.*"
]



